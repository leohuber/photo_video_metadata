#!/usr/bin/env python3

import os
import shutil
import sys
import subprocess
import json

def error_exit(message):
    print(message, file=sys.stderr)
    sys.exit(1)

def check_file_exists(filename):
    if not os.path.exists(filename):
        error_exit(f"Could not find file: {filename}")

def generate_metadata(video_file):
    # Check if video file exists
    check_file_exists(video_file)

    # Extract file extension
    extension = os.path.splitext(video_file)[1][1:].lower()

    # Extract the model of the camera
    model = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Model '{video_file}'")

    # Create meta data file name
    meta_file = f"{os.path.splitext(video_file)[0]}_meta.json"

    # Try to extract the date & create an identifier
    DATE_CREATED = '2005:10:23 20:06:34.33-05:00 - DEFAULT'
    IDENTIFIER = '20051023_200634 - DEFAULT'

    # Check if we are processing a QuickTime container
    if extension == "mov":
        # Try to get CreationDate
        datec = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -CreationDate '{video_file}'")
        if datec:
            DATE_CREATED = datec
            IDENTIFIER = DATE_CREATED[:19].replace(' ', '_').replace(':', '')
        else:
            # Try to get CreateDate
            datec = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -CreateDate '{video_file}'")
            if datec:
                DATE_CREATED = datec
                IDENTIFIER = DATE_CREATED[:19].replace(' ', '_').replace(':', '')

    # Check if we are processing an MP4 container
    if extension == "mp4":
        if model == "Canon EOS R6":
            # Get SubSecCreateDate for Canon R6
            datec = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -SubSecCreateDate '{video_file}'")
            if datec:
                DATE_CREATED = datec
                IDENTIFIER = DATE_CREATED[:19].replace(' ', '_').replace(':', '')
        else:
            # Try to get CreateDate
            datec = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -CreateDate '{video_file}'")
            if datec:
                DATE_CREATED = datec
                IDENTIFIER = DATE_CREATED[:19].replace(' ', '_').replace(':', '')

    # Extract other metadata
    MAKE = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Make '{video_file}'") or 'Apple - DEFAULT'
    MODEL = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Model '{video_file}'") or 'iPhone 11 Pro - DEFAULT'
    GPS = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -GPSCoordinates '{video_file}'")
    if GPS:
        GPS = GPS.replace(' ', ', ')
    else:
        GPS = '-35.2975906, 149.1012676, 554 - DEFAULT'
    COUNTRY_CODE = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -CountryCode '{video_file}'") or 'CHE - DEFAULT'
    COUNTRY = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Country '{video_file}'") or 'Switzerland - DEFAULT'
    CREATOR = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Creator '{video_file}'") or 'Leo Huber - DEFAULT'
    STATE = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -State '{video_file}'") or 'Zurich - DEFAULT'
    CITY = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -City '{video_file}'") or 'Zurich - DEFAULT'
    SUBLOCATION = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Location '{video_file}'") or 'Sublocation - DEFAULT'
    HEADLINE = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Headline '{video_file}'") or 'Headline - DEFAULT'
    TITLE_SUFFIX = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Title '{video_file}'")
    if TITLE_SUFFIX:
        TITLE_SUFFIX = TITLE_SUFFIX.partition('_')[-1]
    else:
        TITLE_SUFFIX = 'Title Suffix - DEFAULT'
    DESCRIPTION = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Description '{video_file}'") or 'Description - DEFAULT'
    COPYRIGHT = subprocess.getoutput(f"exiftool -q -q -b -api largefilesupport=1 -Rights '{video_file}'") or 'Leo Huber - DEFAULT'

    # Create a dictionary to hold the metadata
    metadata = {
        "IDENTIFIER": IDENTIFIER,
        "DATE_CREATED": DATE_CREATED,
        "MAKE": MAKE,
        "MODEL": MODEL,
        "GPS": GPS,
        "CREATOR": CREATOR,
        "COUNTRY_CODE": COUNTRY_CODE,
        "COUNTRY": COUNTRY,
        "STATE": STATE,
        "CITY": CITY,
        "SUBLOCATION": SUBLOCATION,
        "HEADLINE": HEADLINE,
        "TITLE_SUFFIX": TITLE_SUFFIX,
        "DESCRIPTION": DESCRIPTION,
        "COPYRIGHT": COPYRIGHT
    }

    # Write metadata to a JSON file
    with open(meta_file, 'w') as f:
        json.dump(metadata, f, indent=4)

# Check if the exiftool command is available in the system
if shutil.which('exiftool') is None:
  error_exit("Exiftol command not found. Please install it before running this script.")

# Check if at least one video file is provided as a command-line argument
if len(sys.argv) < 2:
    error_exit("No video file specified. Please provide at least one video file as an argument.")

for movie_file in sys.argv[1:]:
    generate_metadata(movie_file)